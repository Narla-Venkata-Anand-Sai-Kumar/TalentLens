# Generated by Django 4.2.7 on 2025-07-11 19:01

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='InterviewAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('total_questions', models.IntegerField()),
                ('questions_answered', models.IntegerField()),
                ('average_response_time', models.FloatField()),
                ('completion_percentage', models.FloatField()),
                ('performance_trend', models.CharField(choices=[('improving', 'Improving'), ('declining', 'Declining'), ('stable', 'Stable')], default='stable', max_length=20)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'interview_analytics',
            },
        ),
        migrations.CreateModel(
            name='InterviewFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('overall_score', models.IntegerField()),
                ('strengths', models.JSONField(default=list)),
                ('areas_for_improvement', models.JSONField(default=list)),
                ('detailed_feedback', models.TextField()),
                ('recommendations', models.TextField(blank=True)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('technical_score', models.IntegerField(blank=True, null=True)),
                ('communication_score', models.IntegerField(blank=True, null=True)),
                ('problem_solving_score', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'interview_feedback',
            },
        ),
        migrations.CreateModel(
            name='InterviewQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('question_text', models.TextField()),
                ('question_order', models.IntegerField()),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('expected_duration_minutes', models.IntegerField(default=5)),
                ('difficulty_level', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=10)),
                ('time_limit', models.IntegerField(default=300)),
                ('category', models.CharField(blank=True, max_length=50)),
                ('expected_answer_length', models.CharField(choices=[('short', 'Short (1-2 sentences)'), ('medium', 'Medium (1-2 paragraphs)'), ('long', 'Long (3+ paragraphs)')], default='medium', max_length=20)),
                ('evaluation_criteria', models.JSONField(blank=True, default=dict)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'interview_questions',
                'ordering': ['question_order'],
            },
        ),
        migrations.CreateModel(
            name='InterviewResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('answer_text', models.TextField()),
                ('score', models.IntegerField(blank=True, null=True)),
                ('ai_feedback', models.TextField(blank=True)),
                ('answered_at', models.DateTimeField(auto_now_add=True)),
                ('time_taken_seconds', models.IntegerField(blank=True, null=True)),
                ('relevance_score', models.IntegerField(blank=True, null=True)),
                ('completeness_score', models.IntegerField(blank=True, null=True)),
                ('clarity_score', models.IntegerField(blank=True, null=True)),
                ('example_score', models.IntegerField(blank=True, null=True)),
                ('audio_recording_url', models.URLField(blank=True)),
                ('transcription_confidence', models.FloatField(blank=True, null=True)),
                ('evaluation_details', models.JSONField(blank=True, default=dict)),
                ('response_quality_score', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'interview_responses',
            },
        ),
        migrations.CreateModel(
            name='InterviewSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('scheduled_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('interview_type', models.CharField(choices=[('technical', 'Technical'), ('communication', 'Communication'), ('aptitude', 'Aptitude')], max_length=20)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('missed', 'Missed'), ('cancelled', 'Cancelled'), ('terminated', 'Terminated')], default='scheduled', max_length=20)),
                ('duration_minutes', models.IntegerField(default=60)),
                ('instructions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('tab_switches', models.IntegerField(default=0)),
                ('warning_count', models.IntegerField(default=0)),
                ('is_secure_mode', models.BooleanField(default=True)),
                ('session_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('security_config', models.JSONField(blank=True, default=dict)),
                ('security_violations', models.JSONField(blank=True, default=list)),
                ('session_token', models.CharField(blank=True, max_length=255, null=True)),
                ('is_session_valid', models.BooleanField(default=True)),
                ('security_metadata', models.JSONField(blank=True, default=dict)),
                ('actual_duration', models.IntegerField(blank=True, null=True)),
                ('time_limit', models.IntegerField(default=300)),
                ('category', models.CharField(blank=True, max_length=50)),
                ('expected_answer_length', models.CharField(choices=[('short', 'Short (1-2 sentences)'), ('medium', 'Medium (1-2 paragraphs)'), ('long', 'Long (3+ paragraphs)')], default='medium', max_length=20)),
                ('evaluation_criteria', models.JSONField(blank=True, default=dict)),
                ('difficulty_level', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=20)),
            ],
            options={
                'db_table': 'interview_sessions',
                'ordering': ['-scheduled_datetime'],
            },
        ),
    ]
